{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/core/Control.js","src/core/Game.js","src/core/GameSnapshot.js","src/core/InternalPlayer.js","src/core/Misile.js","src/drawers/WebDrawer.js","src/log/Logger.js","src/players/sample-player.js","src/utils/Utils.js","src/web.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const Operations = {\n  NONE: 'none',\n  MOVE: 'move',\n  ROTATE: 'rotate',\n  SHOOT: 'shoot'\n}\n\nclass Control {\n\n  constructor() {\n    this.angle = 0\n    this.velocity = 0\n    this.operation = Operations.NONE\n  }\n\n  move(velocity) {\n    this.velocity = velocity\n    this.operation = Operations.MOVE\n  }\n\n  rotate(angle) {\n    this.angle += angle\n    this.operation = Operations.ROTATE\n  }\n\n  shoot() {\n    this.operation = Operations.SHOOT\n  }\n}\n\nmodule.exports = {\n  Control, Operations\n}","// import { SamplePlayer } from \"../players/sample-player\"\nconst InternalPlayer = require('./InternalPlayer')\nconst Utils = require('../utils/Utils')\nconst SamplePlayer = require('../players/sample-player')\nconst GameSnapshot = require('./GameSnapshot.js')\n\nclass Game {\n  constructor(drawer, logger) {\n    this.players = []\n    this.board = Utils.createMultiArray(8,5)\n    this.objects = []\n\n    this.drawer = drawer\n    this.logger = logger\n    this.paused = false\n    this.ended = false\n    this.turnNumber = 0\n  }\n\n  addPlayer(player) {\n    this.players.push(\n      new InternalPlayer(player, this.board[0].length, this.board.length, this.logger)\n    )\n  }\n\n  init() {\n    this.logger.info('GAME INIT')\n\n    this.players.forEach(p => p.doInit(\n      Utils.randomInt(this.board.length),\n      Utils.randomInt(this.board.length),\n      100\n    ))\n\n    this.drawer.init(this.players, this.board, this.objects)\n  }\n\n  async start() {\n    console.log('GAME START')\n\n    while (!this.ended) {\n      this.turn()\n\n      this.turnNumber++\n      // if (this.turnNumber > 10) {\n      //   this.ended = true\n      // }\n      await this.sleep(1000)\n    }\n  }\n\n  nextTick() {\n    this.logger.debug(`TURN ${this.turnNumber}`)\n\n    this.turn()\n\n    this.logger.debug(`OBJECTS ${this.objects}`)\n\n    this.turnNumber++\n  }\n\n  sleep(ms) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  pause() {\n    this.paused = true\n  }\n\n  turn() {\n    this.objects = []\n\n    this.players.forEach(p => {\n      let result = p.doTurn()\n\n      if (result !== null) {\n        this.objects.push(result)\n      }\n    })\n\n    this.drawer.draw2(new GameSnapshot(this.players, this.board, this.objects))\n  }\n}\n\nmodule.exports = Game","class GameSnapshot {\n  constructor(players, board, objects) {\n    this.players = players\n    this.board = board\n    this.objects = objects\n  }\n}\n\nmodule.exports = GameSnapshot","const { Control, Operations } = require('./Control')\nconst Utils = require('../utils/Utils')\nconst Misile = require('./Misile')\n\nclass InternalPlayer {\n  constructor(player, width, height, logger) {\n    this.x = 0\n    this.y = 0\n    this.angle = 0\n    this.life = 100\n    this.width = width\n    this.height = height\n    this.player = player\n    this.logger = logger\n  }\n\n  doInit(x, y, life) {\n    this.x = x\n    this.y = y\n    this.life = life\n    this.player.init()\n  }\n\n  doTurn() {\n    let control = new Control()\n    this.player.turn(control)\n\n    this.logger.debug(`CONTROL ${JSON.stringify(control)}`)\n    this.logger.debug(`PLAYER ${JSON.stringify(this)}`)\n\n    switch(control.operation) {\n      case Operations.NONE:\n        this.logger.debug('NONE operation');\n        break;\n      case Operations.MOVE:\n        this.logger.debug('MOVE operation');\n        this.move(control)\n        break;\n      case Operations.ROTATE:\n        this.logger.debug('ROTATE operation');\n        this.rotate(control)\n        break;\n      case Operations.SHOOT:\n        debugger\n        this.logger.debug('SHOOT operation')\n        return new Misile(this.x, this.y, this.angle, 1, this.width, this.height)\n      default:\n        this.logger.debug('NOOP')\n    }\n\n    return null;\n  }\n\n  rotate(control) {\n    if (control.angle !== 90 && control.angle !== 180 && control.angle !== 270 &&\n        control.angle !== -90 && control.angle !== -180 && control.angle !== -270) {\n          console.error('angle should be +-(90,180,270)')\n    } else {\n      this.angle += control.angle\n      this.angle = Utils.normalizeAngle(this.angle)\n    }\n  }\n\n  move(control) {\n    switch(this.angle) {\n      case 0:\n        if (this.x + control.velocity < this.width) {\n          this.x += control.velocity\n        }\n        break\n      case 180:\n        if (this.x - control.velocity >= 0) {\n          this.x -= control.velocity\n        }\n        break\n      case 90:\n        if (this.y - control.velocity >= 0) {\n          this.y -= control.velocity\n        }\n        break\n      case 270:\n        if (this.y + control.velocity < this.height) {\n          this.y += control.velocity\n        }\n        break\n    }\n  }\n}\n\nmodule.exports = InternalPlayer","class Misile {\n  constructor(x, y, angle, velocity, width, height) {\n    this.x = x\n    this.y = y\n    this.angle = angle\n    this.velocity = velocity\n    this.width = width\n    this.height = height\n  }\n\n  calculatePath() {\n    let path = []\n\n    if (this.angle === 0) {\n      let currentX = this.x\n\n      while (currentX < width) {\n        path.push({ x: currentX, y })\n        currentX++\n      }\n    }\n    if (this.angle === 90) {\n      let currentY = this.y\n\n      while (currentY > 0) {\n        path.push({ x, y: currentY })\n        currentY--\n      }\n    }\n    if (this.angle === 180) {\n      let currentX = this.x\n\n      while (currentX > 0) {\n        path.push({ x: currentX, y })\n        currentX--\n      }\n    }\n    if (this.angle === 270) {\n      let currentY = this.y\n\n      while (currentY < height) {\n        path.push({ x, y: currentY })\n        currentY++\n      }\n    }\n\n\n  }\n}\n\nmodule.exports = Misile","const GameSnapshot = require('../core/GameSnapshot.js')\n\nclass WebDrawer {\n  constructor(players, board) {\n    this.board = null\n    this.players = null\n    this.objects = null\n\n    // TODO: externalize this\n    this.c = document.getElementById(\"myCanvas\");\n    this.ctx = this.c.getContext(\"2d\");\n  }\n\n  init(players, board, objects) {\n    this.board = board\n    this.players = players\n    this.objects = objects\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.ctx.width, this.ctx.height)\n\n    if (this.objects !== null) {\n      this.objects.forEach(object => {\n        if (typeof object === 'Misile') {\n          console.log('FOUND MISILE!!')\n        }\n      })\n    }\n\n    for (let i = 0; i<this.board.length; i++) {\n      for (let j = 0; j<this.board[i].length; j++) {\n        // console.log(' # ')\n        let player = this.anyPlayer(j, i)\n        if (player) {\n          this.ctx.fillStyle = \"#00FF00\"\n          // this.ctx.fillRect(j*10+1, i*10+1, 8, 8 )\n          // this.ctx.drawImage(drawing,j*70, i*70, 70, 70);\n\n          let drawing = new Image()\n          drawing.src = \"http://localhost:8080/img/players/tank.png\"\n          drawing.onload = () => {\n            this.ctx.drawImage(drawing,j*70+1, i*70+1, 20, 20);\n          }\n\n          if (player.angle === 0) {\n            // process.stdout.write(' > ')\n          }\n          if (player.angle === 90) {\n            // process.stdout.write(' ^ ')\n          }\n          if (player.angle === 180) {\n            // process.stdout.write(' < ')\n          }\n          if (player.angle === 270) {\n            // process.stdout.write(' v ')\n          }\n        } else {\n          this.ctx.fillStyle = \"#FF0000\"\n          // this.ctx.fillRect(j*10+1, i*10+1, 8, 8 )\n          let drawing = new Image()\n          drawing.src = \"http://localhost:8080/img/sand/slice33_33.png\"\n          drawing.onload = () => {\n            this.ctx.drawImage(drawing,j*70+1, i*70+1, 50, 50);\n          }\n\n          // process.stdout.write(' # ')\n        }\n      }\n      // console.log('')\n    }\n  }\n\n  draw2(gameSnapshot) {\n    this.ctx.clearRect(0, 0, this.ctx.width, this.ctx.height)\n\n    if (gameSnapshot.objects !== null && gameSnapshot.objects.length > 0) {\n      gameSnapshot.objects.forEach(object => {\n        if (typeof object === 'Misile') {\n          console.log('FOUND MISILE!!')\n        }\n      })\n    }\n\n    for (let i = 0; i<this.board.length; i++) {\n      for (let j = 0; j<this.board[i].length; j++) {\n        // console.log(' # ')\n        let player = this.anyPlayer(j, i)\n        if (player) {\n          this.ctx.fillStyle = \"#00FF00\"\n          // this.ctx.fillRect(j*10+1, i*10+1, 8, 8 )\n          // this.ctx.drawImage(drawing,j*70, i*70, 70, 70);\n\n          let drawing = new Image()\n          drawing.src = \"http://localhost:8080/img/players/tank.png\"\n          drawing.onload = () => {\n            this.ctx.drawImage(drawing,j*70+1, i*70+1, 20, 20);\n          }\n\n          if (player.angle === 0) {\n            // process.stdout.write(' > ')\n          }\n          if (player.angle === 90) {\n            // process.stdout.write(' ^ ')\n          }\n          if (player.angle === 180) {\n            // process.stdout.write(' < ')\n          }\n          if (player.angle === 270) {\n            // process.stdout.write(' v ')\n          }\n        } else {\n          this.ctx.fillStyle = \"#FF0000\"\n          // this.ctx.fillRect(j*10+1, i*10+1, 8, 8 )\n          let drawing = new Image()\n          drawing.src = \"http://localhost:8080/img/sand/slice33_33.png\"\n          drawing.onload = () => {\n            this.ctx.drawImage(drawing,j*70+1, i*70+1, 50, 50);\n          }\n\n          // process.stdout.write(' # ')\n        }\n      }\n      // console.log('')\n    }\n  }\n\n  anyPlayer(x, y) {\n    return this.players.find(p => p.x == x && p.y == y)\n  }\n}\n\nmodule.exports = WebDrawer","const INFO = 3\nconst DEBUG = 2\n\nclass Logger {\n  constructor(idHtmlLog, level) {\n    this.el = document.getElementById(idHtmlLog)\n    this.level = level\n    this.msgs = []\n  }\n\n  info(msg) {\n    this.msgs.push({ level: INFO, msg: msg })\n    this.flush()\n  }\n\n  debug(msg) {\n    this.msgs.push({ level: DEBUG, msg: msg })\n    this.flush()\n  }\n\n  flush() {\n    this.msgs.forEach(msg => this.el.innerHTML += `${msg.level}: ${msg.msg}\\n`)\n    this.el.scrollTop = this.el.scrollHeight;\n    this.msgs = []\n  }\n}\n\nmodule.exports = Logger","const Utils = require('../utils/Utils')\n\nclass SamplePlayer {\n  constructor() {\n    this.turnNumber = 0\n  }\n\n  init() {\n    console.log(`init`)\n  }\n\n  turn(control) {\n    console.log(`turn`)\n\n    if (this.turnNumber % 4 === 0) {\n      control.rotate(90)\n    } else {\n      control.shoot()\n    }\n\n    this.turnNumber++\n  }\n}\n\nmodule.exports = SamplePlayer","function randomInt(max) {\n  return parseInt(Math.random() * max)\n}\n\nfunction normalizeAngle(angle) {\n  if (angle >= 360) {\n    return angle - 360\n  }\n  if (angle < 0) {\n    return 360 - angle\n  }\n\n  return angle\n}\n\nfunction createMultiArray(width, height) {\n  let row = new Array(width).fill(0)\n  let array = new Array(height).fill(row)\n\n  return array\n}\n\nmodule.exports = { randomInt, normalizeAngle, createMultiArray }","const Game = require('./core/Game.js')\nconst WebDrawer = require('./drawers/WebDrawer.js')\nconst SamplePlayer = require('./players/sample-player.js')\nconst Logger = require('./log/Logger.js')\n\n// console.log('Started...')\n\n// let game = new Game(new WebDrawer())\n\n// // add players\n// game.addPlayer(new SamplePlayer())\n// game.addPlayer(new SamplePlayer())\n\n// // init\n// game.init()\n\n// // start\n// game.start()\n\nmodule.exports = { Game, WebDrawer, SamplePlayer, Logger }\n\n// module.exports = {\n//   Game: require('./core/Game.js')\n// }\n\n// exports.Game = require('./core/Game.js')\n\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}